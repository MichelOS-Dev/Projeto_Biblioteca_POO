/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visão;

import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import modeloBeans.BeansLivro;
import modeloBeans.BeansReserva;
import modeloBeans.ModeloTabela;
import modeloConnection.ConexaoBD;
import modeloDao.DaoReserva;

/**
 *
 * @author Michel
 */
public class FormReserva extends javax.swing.JFrame {

    ConexaoBD conex = new ConexaoBD();
    BeansReserva reserva = new BeansReserva();
    FormLivro telaLivro = new FormLivro();
    BeansLivro modLivro = new BeansLivro();
    BeansReserva modReserva = new BeansReserva();
    FormAluno telaAluno = new FormAluno();
    int flag = 0;
    public FormReserva() {
        initComponents();
        preencherTabelaReservas("select * from reservas order by idreserva");
        preencherTabela("select * from alunos order by codigo");
        preencherTabelaLivros("Select * from livros order by id");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableReserva = new javax.swing.JTable();
        jButtonSalvar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jComboBoxSituacao = new javax.swing.JComboBox<>();
        jDateChooserEntrega = new com.toedter.calendar.JDateChooser();
        jDateChooserReserva = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldLivroNome = new javax.swing.JTextField();
        jTextFieldCodigo = new javax.swing.JTextField();
        jTextFieldDisponibilidade = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldID = new javax.swing.JTextField();
        jTextFieldNomeAluno = new javax.swing.JTextField();
        jTextFieldMatricula = new javax.swing.JTextField();
        jTextFieldTurma = new javax.swing.JTextField();
        jTextFieldAluno = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAluno = new javax.swing.JTable();
        jButtonBuscarAlu = new javax.swing.JButton();
        jTextFieldLivro = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableLivros = new javax.swing.JTable();
        jButtonBuscaLi = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButtonAtualizar = new javax.swing.JButton();
        jTextFieldPesquisareserva = new javax.swing.JTextField();
        jButtonPesquisarReserva = new javax.swing.JButton();
        jLabelFundo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setLayout(null);

        jTableReserva.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableReserva.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableReservaMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTableReserva);

        jPanel2.add(jScrollPane3);
        jScrollPane3.setBounds(20, 450, 510, 250);

        jButtonSalvar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonSalvar.setText("Salvar reserva");
        jButtonSalvar.setEnabled(false);
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonSalvar);
        jButtonSalvar.setBounds(20, 360, 130, 30);

        jButtonCancelar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonCancelar.setText("Cancelar Reserva");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonCancelar);
        jButtonCancelar.setBounds(380, 360, 150, 30);

        jComboBoxSituacao.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBoxSituacao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Aberta", "Finalizada" }));
        jComboBoxSituacao.setEnabled(false);
        jPanel2.add(jComboBoxSituacao);
        jComboBoxSituacao.setBounds(680, 240, 272, 30);

        jDateChooserEntrega.setEnabled(false);
        jPanel2.add(jDateChooserEntrega);
        jDateChooserEntrega.setBounds(680, 300, 272, 30);

        jDateChooserReserva.setEnabled(false);
        jPanel2.add(jDateChooserReserva);
        jDateChooserReserva.setBounds(190, 300, 272, 30);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Data de reserva:");
        jPanel2.add(jLabel8);
        jLabel8.setBounds(40, 300, 120, 30);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Data de devolução:");
        jPanel2.add(jLabel9);
        jLabel9.setBounds(520, 300, 140, 30);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Situação:");
        jPanel2.add(jLabel11);
        jLabel11.setBounds(570, 240, 70, 30);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Disponível:");
        jPanel2.add(jLabel10);
        jLabel10.setBounds(560, 190, 80, 40);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Código:");
        jPanel2.add(jLabel6);
        jLabel6.setBounds(50, 240, 60, 40);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Livro:");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(50, 190, 100, 50);

        jTextFieldLivroNome.setEnabled(false);
        jTextFieldLivroNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldLivroNomeActionPerformed(evt);
            }
        });
        jPanel2.add(jTextFieldLivroNome);
        jTextFieldLivroNome.setBounds(190, 200, 272, 30);

        jTextFieldCodigo.setEnabled(false);
        jTextFieldCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCodigoActionPerformed(evt);
            }
        });
        jPanel2.add(jTextFieldCodigo);
        jTextFieldCodigo.setBounds(190, 240, 272, 30);

        jTextFieldDisponibilidade.setEnabled(false);
        jPanel2.add(jTextFieldDisponibilidade);
        jTextFieldDisponibilidade.setBounds(680, 190, 272, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Turma:");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(580, 140, 60, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Matrícula:");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(50, 150, 70, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Aluno:");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(50, 100, 80, 30);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Id da reserva:");
        jPanel2.add(jLabel7);
        jLabel7.setBounds(540, 100, 100, 30);

        jTextFieldID.setEnabled(false);
        jPanel2.add(jTextFieldID);
        jTextFieldID.setBounds(680, 100, 272, 30);

        jTextFieldNomeAluno.setEnabled(false);
        jPanel2.add(jTextFieldNomeAluno);
        jTextFieldNomeAluno.setBounds(190, 100, 272, 30);

        jTextFieldMatricula.setEnabled(false);
        jPanel2.add(jTextFieldMatricula);
        jTextFieldMatricula.setBounds(192, 150, 270, 30);

        jTextFieldTurma.setEnabled(false);
        jPanel2.add(jTextFieldTurma);
        jTextFieldTurma.setBounds(680, 140, 272, 30);
        jPanel2.add(jTextFieldAluno);
        jTextFieldAluno.setBounds(590, 560, 450, 30);

        jTableAluno.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableAluno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableAlunoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableAluno);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(590, 600, 570, 100);

        jButtonBuscarAlu.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonBuscarAlu.setText("Buscar aluno");
        jButtonBuscarAlu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarAluActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonBuscarAlu);
        jButtonBuscarAlu.setBounds(1050, 560, 111, 30);
        jPanel2.add(jTextFieldLivro);
        jTextFieldLivro.setBounds(590, 410, 440, 30);

        jTableLivros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableLivros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableLivrosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableLivros);

        jPanel2.add(jScrollPane2);
        jScrollPane2.setBounds(590, 450, 570, 100);

        jButtonBuscaLi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonBuscaLi.setText("Buscar Livro");
        jButtonBuscaLi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscaLiActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonBuscaLi);
        jButtonBuscaLi.setBounds(1047, 410, 110, 30);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Cadastro de Reservas");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(430, 25, 300, 40);

        jButtonAtualizar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonAtualizar.setText("Atualizar Situação");
        jButtonAtualizar.setEnabled(false);
        jButtonAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAtualizarActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonAtualizar);
        jButtonAtualizar.setBounds(180, 360, 155, 30);
        jPanel2.add(jTextFieldPesquisareserva);
        jTextFieldPesquisareserva.setBounds(20, 410, 380, 30);

        jButtonPesquisarReserva.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonPesquisarReserva.setText("Pesquisar");
        jButtonPesquisarReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarReservaActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonPesquisarReserva);
        jButtonPesquisarReserva.setBounds(420, 410, 90, 30);

        jLabelFundo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/FundoReserva.png"))); // NOI18N
        jPanel2.add(jLabelFundo);
        jLabelFundo.setBounds(0, 0, 1180, 840);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1182, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 840, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setSize(new java.awt.Dimension(1198, 879));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldLivroNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldLivroNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldLivroNomeActionPerformed

    private void jTextFieldCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCodigoActionPerformed

    private void jButtonBuscarAluActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarAluActionPerformed
        preencherTabela("select codigo,matricula,nome,turma from alunos where nome ilike'%"+jTextFieldAluno.getText()+"%'");
    }//GEN-LAST:event_jButtonBuscarAluActionPerformed

    private void jButtonBuscaLiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscaLiActionPerformed
        preencherTabelaLivros("select * from livros where titulo ilike'%"+jTextFieldLivro.getText()+"%'");
    }//GEN-LAST:event_jButtonBuscaLiActionPerformed

    private void jTableAlunoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableAlunoMouseClicked
        String nome_aluno = ""+jTableAluno.getValueAt(jTableAluno.getSelectedRow(),2);
       //JOptionPane.showMessageDialog(null,nome_aluno);
       conex.conexao();
       conex.executeSql("select * from alunos where nome='"+nome_aluno+"'");
       try{      
                conex.rs.first();
                
                jTextFieldMatricula.setText(String.valueOf(conex.rs.getInt("matricula")));
                jTextFieldNomeAluno.setText(conex.rs.getString("nome"));
                jTextFieldTurma.setText(conex.rs.getString("turma"));
                jTextFieldAluno.setText(conex.rs.getString("nome"));

       }catch(SQLException ex){
           JOptionPane.showMessageDialog(null,"Erro ao selecionar os dados!\nErro: "+ex);
           //Erro: org.postgresql.util.PSQLException:ResultSet não está posicionado corretamente, talvez você precise chamar next.
       }
       
       conex.desconecta();
       jButtonAtualizar.setEnabled(false);
       jButtonSalvar.setEnabled(true);
    }//GEN-LAST:event_jTableAlunoMouseClicked

    private void jTableLivrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableLivrosMouseClicked
        String nome_livro = ""+jTableLivros.getValueAt(jTableLivros.getSelectedRow(),2);
       //JOptionPane.showMessageDialog(null,nome_aluno);
       conex.conexao();
       conex.executeSql("select * from livros where titulo='"+nome_livro+"'");
       try{      
                conex.rs.first();
               
                jTextFieldLivroNome.setText(conex.rs.getString("titulo"));
                jTextFieldCodigo.setText(String.valueOf(conex.rs.getInt("codigo")));
                jTextFieldDisponibilidade.setText(conex.rs.getString("disponibilidade"));
                jTextFieldLivro.setText(conex.rs.getString("titulo"));
                
       }catch(SQLException ex){
           JOptionPane.showMessageDialog(null,"Erro ao selecionar os dados!\nErro: "+ex);
           //Erro: org.postgresql.util.PSQLException:ResultSet não está posicionado corretamente, talvez você precise chamar next.
       }
       
       conex.desconecta();
       jDateChooserEntrega.setDate(null);
       jDateChooserReserva.setDate(null);
       jButtonSalvar.setEnabled(true);
       jDateChooserEntrega.setEnabled(true);
       jDateChooserReserva.setEnabled(true);
       jComboBoxSituacao.setEnabled(true);
       jButtonAtualizar.setEnabled(false);
    }//GEN-LAST:event_jTableLivrosMouseClicked

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        if(flag != 2 || flag == 0){
            if(jTextFieldNomeAluno.getText().isEmpty()){
                JOptionPane.showMessageDialog(null,"Escolha o ALUNO para continuar!");
                jTextFieldNomeAluno.requestFocus();
            }else if(jTextFieldLivroNome.getText().isEmpty()){
                JOptionPane.showMessageDialog(null,"Escolha um LIVRO para continuar!");
                jTextFieldLivroNome.requestFocus();
            }else if(jTextFieldDisponibilidade.getText().equalsIgnoreCase("f")){
                JOptionPane.showMessageDialog(null,"Esse livro não está disponível!");    
            }else if(jDateChooserEntrega.getDate() == null){
                JOptionPane.showMessageDialog(null,"Escolha uma DATA ENTREGA para continuar!");
                jDateChooserEntrega.requestFocus();
            }else if(jDateChooserReserva.getDate() == null){
                JOptionPane.showMessageDialog(null,"Escolha uma DATA RESERVA para continuar!");
                jDateChooserReserva.requestFocus();
            }else if(jComboBoxSituacao.getSelectedItem() == "Finalizada"){
                JOptionPane.showMessageDialog(null,"Escolha a opção de ABERTA para continuar!");
                jComboBoxSituacao.requestFocus();
            }
            else{
                if(flag != 2){
                    reserva.setNomeALuno(jTextFieldNomeAluno.getText());
                    reserva.setNomelivro(jTextFieldLivroNome.getText());
                    reserva.setDateReserva(jDateChooserReserva.getDate());
                    reserva.setDateEntrega(jDateChooserEntrega.getDate());
                    reserva.setSituacao((String)jComboBoxSituacao.getSelectedItem());
                    DaoReserva dao = new DaoReserva();
                    dao.Salvar(reserva);
                    String id_livro = ""+jTableLivros.getValueAt(jTableLivros.getSelectedRow(),0);
                    //JOptionPane.showMessageDialog(null,nome_aluno);
                    conex.conexao();
                    conex.executeSql("select * from livros where id='"+id_livro+"'");
                    try{      
                             conex.rs.first();
                             int id = conex.rs.getInt("id");
                             String titulo = conex.rs.getString("titulo");
                             String autor = conex.rs.getString("autor");
                             Boolean dis = conex.rs.getBoolean("disponibilidade");
                             String genero = conex.rs.getString("genero");
                             String editora = conex.rs.getString("editora");
                             int cod = conex.rs.getInt("codigo");
                            modLivro.setTitulo(titulo);
                            modLivro.setAutor(autor);
                            modLivro.setEditora(editora);
                            modLivro.setGenero(genero);
                            modLivro.setCodigo(cod);
                            modLivro.setDisponibilidade(false);
                            modLivro.setId(id);
                            dao.Atualizar(modLivro);
                    }catch(SQLException ex){
                        JOptionPane.showMessageDialog(null,"Erro ao selecionar os dados!\nErro: "+ex);
                        //Erro: org.postgresql.util.PSQLException:ResultSet não está posicionado corretamente, talvez você precise chamar next.
                    }
                    conex.desconecta();
                    
                    jTextFieldAluno.setText("");
        jTextFieldID.setText("");
        jTextFieldLivroNome.setText("");
        jTextFieldNomeAluno.setText("");
        jTextFieldDisponibilidade.setText("");
        jTextFieldCodigo.setText("");
        
        jTextFieldLivro.setText("");
        jTextFieldMatricula.setText("");
        jTextFieldTurma.setText("");
        jDateChooserEntrega.setDate(null);
        jDateChooserReserva.setDate(null);
        jButtonAtualizar.setEnabled(false);
        jButtonSalvar.setEnabled(false);
        jDateChooserEntrega.setEnabled(false);
       jDateChooserReserva.setEnabled(false);
       jComboBoxSituacao.setEnabled(false);
                    preencherTabelaLivros("select * from livros order by id");
                    preencherTabelaReservas("select * from reservas order by idreserva");
                }

            }
        }else{
                 
                DaoReserva dao = new DaoReserva();
                reserva.setDateReserva(jDateChooserReserva.getDate());
                reserva.setDateEntrega(jDateChooserEntrega.getDate());
                reserva.setSituacao((String)jComboBoxSituacao.getSelectedItem());
                reserva.setIdReserva(Integer.parseInt(jTextFieldID.getText()));
                
                dao.AtualizarReserva(reserva);
                
                String id_livro = ""+jTableReserva.getValueAt(jTableReserva.getSelectedRow(),2);
                //JOptionPane.showMessageDialog(null,nome_aluno);
                conex.conexao();
                conex.executeSql("select * from livros where id='"+id_livro+"'");
                try{      
                         conex.rs.first();
                         int id = conex.rs.getInt("id");
                         String titulo = conex.rs.getString("titulo");
                         String autor = conex.rs.getString("autor");
                         Boolean dis = conex.rs.getBoolean("disponibilidade");
                         String genero = conex.rs.getString("genero");
                         String editora = conex.rs.getString("editora");
                         int cod = conex.rs.getInt("codigo");
                        modLivro.setTitulo(titulo);
                        modLivro.setAutor(autor);
                        modLivro.setEditora(editora);
                        modLivro.setGenero(genero);
                        modLivro.setCodigo(cod);
                        modLivro.setDisponibilidade(true);
                        modLivro.setId(id);
                        dao.Atualizar(modLivro);
                }catch(SQLException ex){
                    JOptionPane.showMessageDialog(null,"Erro ao selecionar os dados!\nErro: "+ex);
                    //Erro: org.postgresql.util.PSQLException:ResultSet não está posicionado corretamente, talvez você precise chamar next.
                }
                
                conex.desconecta();
                if(telaAluno == null){
                    telaAluno = new FormAluno();
                    telaAluno.setVisible(true);
                    telaAluno.setResizable(false);
                }else{
                    telaAluno.setVisible(true);
                    telaAluno.setResizable(false);
                }
                flag = 0;
                jTextFieldAluno.setText("");
        jTextFieldID.setText("");
        jTextFieldLivroNome.setText("");
        jTextFieldNomeAluno.setText("");
        jTextFieldDisponibilidade.setText("");
        jTextFieldCodigo.setText("");
        
        jTextFieldLivro.setText("");
        jTextFieldMatricula.setText("");
        jTextFieldTurma.setText("");
        jDateChooserEntrega.setDate(null);
        jDateChooserReserva.setDate(null);
        jButtonAtualizar.setEnabled(false);
        jButtonSalvar.setEnabled(false);
        jDateChooserEntrega.setEnabled(false);
       jDateChooserReserva.setEnabled(false);
       jComboBoxSituacao.setEnabled(false);
            preencherTabelaLivros("select * from livros order by id");
            preencherTabelaReservas("select * from reservas order by idreserva desc");
            }       
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        flag = 0;
        jTextFieldAluno.setText("");
        jTextFieldID.setText("");
        jTextFieldLivroNome.setText("");
        jTextFieldNomeAluno.setText("");
        jTextFieldDisponibilidade.setText("");
        jTextFieldCodigo.setText("");
        
        jTextFieldLivro.setText("");
        jTextFieldMatricula.setText("");
        jTextFieldTurma.setText("");
        jDateChooserEntrega.setDate(null);
        jDateChooserReserva.setDate(null);
        jButtonAtualizar.setEnabled(false);
        jButtonSalvar.setEnabled(false);
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAtualizarActionPerformed
        flag = 2;
        jButtonAtualizar.setEnabled(false);
        jButtonSalvar.setEnabled(true);
       jDateChooserEntrega.setEnabled(false);
       jDateChooserReserva.setEnabled(false);
       jComboBoxSituacao.setEnabled(true);
    }//GEN-LAST:event_jButtonAtualizarActionPerformed

    private void jTableReservaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableReservaMouseClicked
        String id = ""+jTableReserva.getValueAt(jTableReserva.getSelectedRow(),0);
       //JOptionPane.showMessageDialog(null,nome_aluno);
       conex.conexao();
       conex.executeSql("select * from reservas where idreserva='"+id+"'");
       try{      
                conex.rs.first();
                jTextFieldID.setText(String.valueOf(conex.rs.getInt("idreserva")));
                jComboBoxSituacao.setSelectedItem(conex.rs.getString("situacao"));
                jDateChooserEntrega.setDate(conex.rs.getDate("dataentrega"));
                jDateChooserReserva.setDate(conex.rs.getDate("datareserva"));
       
       }catch(SQLException ex){
           JOptionPane.showMessageDialog(null,"Erro ao selecionar os dados!\nErro: "+ex);
           //Erro: org.postgresql.util.PSQLException:ResultSet não está posicionado corretamente, talvez você precise chamar next.
       }
       
       conex.desconecta();
       jButtonAtualizar.setEnabled(true);
       jButtonSalvar.setEnabled(false);
       jDateChooserEntrega.setEnabled(false);
       jDateChooserReserva.setEnabled(false);
       jComboBoxSituacao.setEnabled(false);
       
    }//GEN-LAST:event_jTableReservaMouseClicked

    private void jButtonPesquisarReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarReservaActionPerformed
        preencherTabelaReservas("select * from reservas where idreserva = "+Integer.parseInt(jTextFieldPesquisareserva.getText()));
    }//GEN-LAST:event_jButtonPesquisarReservaActionPerformed

    
    public void preencherTabela(String Sql){
    
        ArrayList dados = new ArrayList();
        String [] colunas = new String []{"Id",",Matrícula","Nome","Turma"};
        conex.conexao();
        conex.executeSql(Sql);
        try{
            conex.rs.first();
            do{
                dados.add(new Object[]{conex.rs.getInt("codigo"),conex.rs.getInt("matricula"),conex.rs.getString("nome"),conex.rs.getString("turma")});
            }while(conex.rs.next());
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(null,"Busque por outro aluno para preencher a tabela!");
        }
        
        ModeloTabela modelo = new ModeloTabela(dados,colunas); 
        
        jTableAluno.setModel(modelo);
        jTableAluno.getColumnModel().getColumn(0).setPreferredWidth(40);
        jTableAluno.getColumnModel().getColumn(0).setResizable(false);
        jTableAluno.getColumnModel().getColumn(1).setPreferredWidth(120);
        jTableAluno.getColumnModel().getColumn(1).setResizable(false);
        jTableAluno.getColumnModel().getColumn(2).setPreferredWidth(307);
        jTableAluno.getColumnModel().getColumn(2).setResizable(false);
        jTableAluno.getColumnModel().getColumn(3).setPreferredWidth(80);
        jTableAluno.getColumnModel().getColumn(3).setResizable(false);
//        jTableAluno.getColumnModel().getColumn(4).setPreferredWidth(90);
//        jTableAluno.getColumnModel().getColumn(4).setResizable(false);
//        jTableAluno.getColumnModel().getColumn(5).setPreferredWidth(167);
//        jTableAluno.getColumnModel().getColumn(5).setResizable(false);
        
        jTableAluno.getTableHeader().setReorderingAllowed(false);
        jTableAluno.setAutoResizeMode(jTableAluno.AUTO_RESIZE_OFF);
        jTableAluno.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        conex.desconecta();
    
    }
    public void preencherTabelaLivros(String Sql){
    
        ArrayList dados = new ArrayList();
        String [] colunas = new String []{"Id",",Código","Título","Disponibilidade"};
        conex.conexao();
        conex.executeSql(Sql);
        try{
            conex.rs.first();
            do{
                dados.add(new Object[]{conex.rs.getInt("id"),conex.rs.getInt("codigo"),conex.rs.getString("titulo"),conex.rs.getBoolean("disponibilidade")});
            }while(conex.rs.next());
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(null,"Busque por outro livro para preencher a tabela!");
        }
        
        ModeloTabela modelo = new ModeloTabela(dados,colunas); 
        
        jTableLivros.setModel(modelo);
        jTableLivros.getColumnModel().getColumn(0).setPreferredWidth(40);
        jTableLivros.getColumnModel().getColumn(0).setResizable(false);
        jTableLivros.getColumnModel().getColumn(1).setPreferredWidth(100);
        jTableLivros.getColumnModel().getColumn(1).setResizable(false);
        jTableLivros.getColumnModel().getColumn(2).setPreferredWidth(241);
        jTableLivros.getColumnModel().getColumn(2).setResizable(false);
////        jTableLivros.getColumnModel().getColumn(3).setPreferredWidth(80);
////        jTableLivros.getColumnModel().getColumn(3).setResizable(false);
////        jTableLivros.getColumnModel().getColumn(4).setPreferredWidth(90);
////        jTableLivros.getColumnModel().getColumn(4).setResizable(false);
////        jTableLivros.getColumnModel().getColumn(5).setPreferredWidth(167);
////        jTableLivros.getColumnModel().getColumn(5).setResizable(false);
        jTableLivros.getColumnModel().getColumn(3).setPreferredWidth(167);
        jTableLivros.getColumnModel().getColumn(3).setResizable(false);
        
        
        jTableLivros.getTableHeader().setReorderingAllowed(false);
        jTableLivros.setAutoResizeMode(jTableLivros.AUTO_RESIZE_OFF);
        jTableLivros.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        conex.desconecta();
    
    }
    
    public void preencherTabelaReservas(String Sql){
    
        ArrayList dados = new ArrayList();
        String [] colunas = new String []{"Id","Código Aluno","Código Livro","Data Reserva","Data Entrega", "Situação"};
        conex.conexao();
        conex.executeSql(Sql);
        try{
            conex.rs.first();
            do{
                dados.add(new Object[]{conex.rs.getInt("idreserva"),conex.rs.getInt("codaluno"),conex.rs.getInt("codlivro"),conex.rs.getDate("datareserva"),conex.rs.getDate("dataentrega"),conex.rs.getString("situacao")});
            }while(conex.rs.next());
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(null,"Busque por outro reserva para preencher a tabela!");
        }
        
        ModeloTabela modelo = new ModeloTabela(dados,colunas); 
        
        jTableReserva.setModel(modelo);
        jTableReserva.getColumnModel().getColumn(0).setPreferredWidth(35);
        jTableReserva.getColumnModel().getColumn(0).setResizable(false);
        jTableReserva.getColumnModel().getColumn(1).setPreferredWidth(90);
        jTableReserva.getColumnModel().getColumn(1).setResizable(false);
        jTableReserva.getColumnModel().getColumn(2).setPreferredWidth(90);
        jTableReserva.getColumnModel().getColumn(2).setResizable(false);
        jTableReserva.getColumnModel().getColumn(3).setPreferredWidth(90);
        jTableReserva.getColumnModel().getColumn(3).setResizable(false);
        jTableReserva.getColumnModel().getColumn(4).setPreferredWidth(90);
        jTableReserva.getColumnModel().getColumn(4).setResizable(false);
////        jTableLivros.getColumnModel().getColumn(5).setPreferredWidth(167);
////        jTableLivros.getColumnModel().getColumn(5).setResizable(false);
        jTableReserva.getColumnModel().getColumn(5).setPreferredWidth(109);
        jTableReserva.getColumnModel().getColumn(5).setResizable(false);
        
        
        jTableReserva.getTableHeader().setReorderingAllowed(false);
        jTableReserva.setAutoResizeMode(jTableReserva.AUTO_RESIZE_OFF);
        jTableReserva.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        conex.desconecta();
    
    }
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormReserva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormReserva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormReserva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormReserva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormReserva().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAtualizar;
    private javax.swing.JButton jButtonBuscaLi;
    private javax.swing.JButton jButtonBuscarAlu;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonPesquisarReserva;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JComboBox<String> jComboBoxSituacao;
    private com.toedter.calendar.JDateChooser jDateChooserEntrega;
    private com.toedter.calendar.JDateChooser jDateChooserReserva;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelFundo;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableAluno;
    private javax.swing.JTable jTableLivros;
    private javax.swing.JTable jTableReserva;
    private javax.swing.JTextField jTextFieldAluno;
    private javax.swing.JTextField jTextFieldCodigo;
    private javax.swing.JTextField jTextFieldDisponibilidade;
    private javax.swing.JTextField jTextFieldID;
    private javax.swing.JTextField jTextFieldLivro;
    private javax.swing.JTextField jTextFieldLivroNome;
    private javax.swing.JTextField jTextFieldMatricula;
    private javax.swing.JTextField jTextFieldNomeAluno;
    private javax.swing.JTextField jTextFieldPesquisareserva;
    private javax.swing.JTextField jTextFieldTurma;
    // End of variables declaration//GEN-END:variables
}
